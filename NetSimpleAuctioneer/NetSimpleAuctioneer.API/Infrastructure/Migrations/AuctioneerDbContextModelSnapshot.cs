// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetSimpleAuctioneer.API.Infrastructure.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NetSimpleAuctioneer.API.Migrations
{
    [DbContext(typeof(AuctioneerDbContext))]
    partial class AuctioneerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NetSimpleAuctioneer.API.Database.Auction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("enddate");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("startdate");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uuid")
                        .HasColumnName("vehicleid");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId", "EndDate")
                        .IsUnique()
                        .HasDatabaseName("UniqueActiveAuction");

                    b.ToTable("auction", (string)null);
                });

            modelBuilder.Entity("NetSimpleAuctioneer.API.Database.Bid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uuid")
                        .HasColumnName("auctionid");

                    b.Property<decimal>("BidAmount")
                        .HasColumnType("numeric")
                        .HasColumnName("bidamount");

                    b.Property<string>("BidderEmail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("biddersemail");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.ToTable("bid", (string)null);
                });

            modelBuilder.Entity("NetSimpleAuctioneer.API.Database.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal?>("LoadCapacity")
                        .HasColumnType("numeric")
                        .HasColumnName("loadcapacity");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("manufacturer");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("model");

                    b.Property<int?>("NumberOfDoors")
                        .HasColumnType("integer")
                        .HasColumnName("numberofdoors");

                    b.Property<int?>("NumberOfSeats")
                        .HasColumnType("integer")
                        .HasColumnName("numberofseats");

                    b.Property<decimal>("StartingBid")
                        .HasColumnType("numeric")
                        .HasColumnName("startingbid");

                    b.Property<int>("VehicleType")
                        .HasColumnType("integer")
                        .HasColumnName("vehicletype");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("vehicle", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
